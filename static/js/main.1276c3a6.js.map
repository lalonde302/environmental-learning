{"version":3,"file":"static/js/main.1276c3a6.js","mappings":"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","sources":["src/data/index.ts","src/context/AppContext.tsx","src/screens/HomeScreen.tsx","src/screens/LessonsScreen.tsx","src/screens/LessonDetailScreen.tsx","src/screens/QuizScreen.tsx","src/screens/ProfileScreen.tsx","src/screens/CareersScreen.tsx","src/screens/AchievementsScreen.tsx","src/navigation/AppNavigator.tsx","index.ts","App.tsx","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { Lesson, Badge, Career } from '../types';\n\nexport const lessons: Lesson[] = [\n  {\n    id: '1',\n    title: 'Introduction to Climate Change',\n    description: 'Learn the basics of climate change and its impacts on our planet.',\n    topic: 'Climate',\n    points: 50,\n    content: 'Climate change refers to long-term shifts in temperatures and weather patterns. These shifts may be natural, but since the 1800s, human activities have been the main driver of climate change, primarily due to the burning of fossil fuels like coal, oil, and gas, which produces heat-trapping gases.',\n    questions: [\n      {\n        id: '1-1',\n        text: 'What is the main driver of climate change since the 1800s?',\n        options: ['Solar activity', 'Human activities', 'Natural cycles', 'Volcanic eruptions'],\n        correctAnswer: 'Human activities'\n      },\n      {\n        id: '1-2',\n        text: 'Which of the following produces heat-trapping gases?',\n        options: ['Planting trees', 'Solar energy', 'Burning fossil fuels', 'Wind power'],\n        correctAnswer: 'Burning fossil fuels'\n      }\n    ],\n    completed: false\n  },\n  {\n    id: '2',\n    title: 'Renewable Energy Basics',\n    description: 'Discover the various types of renewable energy and their benefits.',\n    topic: 'Energy',\n    points: 50,\n    content: 'Renewable energy comes from natural sources that are constantly replenished, such as sunlight, wind, water, and geothermal heat. Unlike fossil fuels, renewable energy sources won\\'t run out and generally don\\'t produce greenhouse gases or pollutants when generating electricity.',\n    questions: [\n      {\n        id: '2-1',\n        text: 'Which of the following is NOT a renewable energy source?',\n        options: ['Solar', 'Wind', 'Natural gas', 'Hydroelectric'],\n        correctAnswer: 'Natural gas'\n      },\n      {\n        id: '2-2',\n        text: 'What is a key benefit of renewable energy sources?',\n        options: ['They are cheaper to build', 'They don\\'t produce greenhouse gases', 'They work in all weather conditions', 'They require less space'],\n        correctAnswer: 'They don\\'t produce greenhouse gases'\n      }\n    ],\n    completed: false\n  },\n  {\n    id: '3',\n    title: 'Ocean Conservation',\n    description: 'Explore the importance of protecting our oceans and marine life.',\n    topic: 'Oceans',\n    points: 75,\n    content: 'Oceans cover more than 70% of Earth\\'s surface and contain 97% of Earth\\'s water. They generate over half of the oxygen we breathe, absorb carbon dioxide, and regulate our climate. Marine biodiversity is essential for maintaining the health and stability of ocean ecosystems.',\n    questions: [\n      {\n        id: '3-1',\n        text: 'What percentage of Earth\\'s surface is covered by oceans?',\n        options: ['50%', '60%', '70%', '80%'],\n        correctAnswer: '70%'\n      },\n      {\n        id: '3-2',\n        text: 'Which of the following is NOT a function of oceans?',\n        options: ['Generating oxygen', 'Absorbing carbon dioxide', 'Regulating climate', 'Producing fossil fuels'],\n        correctAnswer: 'Producing fossil fuels'\n      }\n    ],\n    completed: false\n  },\n  {\n    id: '4',\n    title: 'Sustainable Agriculture',\n    description: 'Learn about sustainable farming practices that protect the environment.',\n    topic: 'Agriculture',\n    points: 75,\n    content: 'Sustainable agriculture refers to farming practices that protect the environment, public health, and animal welfare while ensuring economic viability. It focuses on soil health, water conservation, biodiversity, and reduced use of synthetic inputs.',\n    questions: [\n      {\n        id: '4-1',\n        text: 'What is a key focus of sustainable agriculture?',\n        options: ['Maximizing yield at any cost', 'Soil health', 'Using more pesticides', 'Monoculture farming'],\n        correctAnswer: 'Soil health'\n      },\n      {\n        id: '4-2',\n        text: 'Which practice is most associated with sustainable agriculture?',\n        options: ['Heavy use of synthetic fertilizers', 'Crop rotation', 'Clear-cutting forests for farmland', 'Intensive irrigation'],\n        correctAnswer: 'Crop rotation'\n      }\n    ],\n    completed: false\n  }\n];\n\nexport const badges: Badge[] = [\n  {\n    id: 'b1',\n    name: 'Climate Novice',\n    description: 'Complete your first climate-related lesson',\n    image: '🌡️',\n    unlocked: false,\n    requirementType: 'lessons',\n    requirementValue: 1\n  },\n  {\n    id: 'b2',\n    name: 'Eco Explorer',\n    description: 'Earn 100 points',\n    image: '🔍',\n    unlocked: false,\n    requirementType: 'points',\n    requirementValue: 100\n  },\n  {\n    id: 'b3',\n    name: 'Environmental Enthusiast',\n    description: 'Complete 3 different lessons',\n    image: '🌱',\n    unlocked: false,\n    requirementType: 'lessons',\n    requirementValue: 3\n  },\n  {\n    id: 'b4',\n    name: 'Green Guardian',\n    description: 'Earn 250 points',\n    image: '🛡️',\n    unlocked: false,\n    requirementType: 'points',\n    requirementValue: 250\n  }\n];\n\nexport const careers: Career[] = [\n  {\n    id: 'c1',\n    title: 'Environmental Scientist',\n    description: 'Research and analyze environmental problems to develop solutions.',\n    requirements: ['Strong background in science', 'Analytical skills', 'Fieldwork experience'],\n    unlocked: false,\n    pointsRequired: 100\n  },\n  {\n    id: 'c2',\n    title: 'Renewable Energy Engineer',\n    description: 'Design and develop renewable energy systems and technologies.',\n    requirements: ['Engineering knowledge', 'Problem-solving skills', 'Understanding of energy systems'],\n    unlocked: false,\n    pointsRequired: 150\n  },\n  {\n    id: 'c3',\n    title: 'Conservation Biologist',\n    description: 'Study and protect biodiversity and ecosystems.',\n    requirements: ['Biology background', 'Passion for wildlife', 'Research skills'],\n    unlocked: false,\n    pointsRequired: 200\n  },\n  {\n    id: 'c4',\n    title: 'Sustainable Agriculture Specialist',\n    description: 'Develop and implement sustainable farming practices.',\n    requirements: ['Knowledge of agricultural systems', 'Environmental awareness', 'Problem-solving abilities'],\n    unlocked: false,\n    pointsRequired: 250\n  }\n]; ","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { User, Lesson, Badge, Career } from '../types';\nimport { lessons, badges, careers } from '../data';\n\ninterface AppContextType {\n  user: User;\n  addPoints: (points: number) => void;\n  completeLesson: (lessonId: string) => void;\n  resetProgress: () => void;\n  allLessons: Lesson[];\n}\n\nconst initialUser: User = {\n  id: '1',\n  username: 'EcoLearner',\n  points: 0,\n  level: 1,\n  badges: badges.map((badge: Badge) => ({ ...badge, unlocked: false })),\n  completedLessons: [],\n  careers: careers.map((career: Career) => ({ ...career, unlocked: false })),\n};\n\nconst AppContext = createContext<AppContextType | undefined>(undefined);\n\nexport const useAppContext = () => {\n  const context = useContext(AppContext);\n  if (!context) {\n    throw new Error('useAppContext must be used within an AppProvider');\n  }\n  return context;\n};\n\nexport const AppProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User>(initialUser);\n  const [allLessons, setAllLessons] = useState<Lesson[]>(lessons);\n\n  // Calculate level based on points\n  useEffect(() => {\n    const newLevel = Math.floor(user.points / 100) + 1;\n    if (newLevel !== user.level) {\n      setUser(prev => ({ ...prev, level: newLevel }));\n    }\n  }, [user.points]);\n\n  // Check for badge unlocks\n  useEffect(() => {\n    const updatedBadges = user.badges.map(badge => {\n      let shouldUnlock = false;\n      \n      if (badge.requirementType === 'points' && user.points >= badge.requirementValue) {\n        shouldUnlock = true;\n      } else if (badge.requirementType === 'lessons' && user.completedLessons.length >= badge.requirementValue) {\n        shouldUnlock = true;\n      }\n      \n      return { ...badge, unlocked: badge.unlocked || shouldUnlock };\n    });\n\n    // Check for career unlocks\n    const updatedCareers = user.careers.map(career => {\n      return { \n        ...career, \n        unlocked: career.unlocked || user.points >= career.pointsRequired \n      };\n    });\n\n    if (JSON.stringify(updatedBadges) !== JSON.stringify(user.badges) || \n        JSON.stringify(updatedCareers) !== JSON.stringify(user.careers)) {\n      setUser(prev => ({ \n        ...prev, \n        badges: updatedBadges,\n        careers: updatedCareers\n      }));\n    }\n  }, [user.points, user.completedLessons]);\n\n  const addPoints = (points: number) => {\n    setUser(prev => ({ ...prev, points: prev.points + points }));\n  };\n\n  const completeLesson = (lessonId: string) => {\n    if (!user.completedLessons.includes(lessonId)) {\n      // Add to completed lessons\n      setUser(prev => ({\n        ...prev,\n        completedLessons: [...prev.completedLessons, lessonId]\n      }));\n\n      // Find the lesson and add its points\n      const lesson = allLessons.find(l => l.id === lessonId);\n      if (lesson) {\n        addPoints(lesson.points);\n        \n        // Mark lesson as completed in allLessons\n        setAllLessons(prev => \n          prev.map(l => l.id === lessonId ? { ...l, completed: true } : l)\n        );\n      }\n    }\n  };\n\n  const resetProgress = () => {\n    setUser(initialUser);\n    setAllLessons(lessons.map((lesson: Lesson) => ({ ...lesson, completed: false })));\n  };\n\n  return (\n    <AppContext.Provider value={{ user, addPoints, completeLesson, resetProgress, allLessons }}>\n      {children}\n    </AppContext.Provider>\n  );\n}; ","import React from 'react';\nimport { View, Text, StyleSheet, ScrollView, TouchableOpacity, Image } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { useAppContext } from '../context/AppContext';\n\nconst HomeScreen = () => {\n  const navigation = useNavigation();\n  const { user, allLessons } = useAppContext();\n\n  // Calculate completion percentage\n  const completionPercentage = \n    user.completedLessons.length > 0 \n      ? Math.round((user.completedLessons.length / allLessons.length) * 100) \n      : 0;\n  \n  // Get top topics based on completed lessons\n  const getTopics = () => {\n    const uniqueTopics = Array.from(new Set(allLessons.map(lesson => lesson.topic)));\n    return uniqueTopics.slice(0, 3);\n  };\n\n  return (\n    <ScrollView style={styles.container}>\n      <View style={styles.header}>\n        <Image \n          source={{ uri: 'https://reactnative.dev/img/tiny_logo.png' }} \n          style={styles.logo} \n        />\n        <Text style={styles.appTitle}>EcoLearn</Text>\n      </View>\n      \n      <View style={styles.userCard}>\n        <Text style={styles.welcomeText}>Welcome, {user.username}!</Text>\n        <View style={styles.statsContainer}>\n          <View style={styles.statItem}>\n            <Text style={styles.statValue}>{user.points}</Text>\n            <Text style={styles.statLabel}>Points</Text>\n          </View>\n          <View style={styles.statItem}>\n            <Text style={styles.statValue}>{user.level}</Text>\n            <Text style={styles.statLabel}>Level</Text>\n          </View>\n          <View style={styles.statItem}>\n            <Text style={styles.statValue}>{completionPercentage}%</Text>\n            <Text style={styles.statLabel}>Complete</Text>\n          </View>\n        </View>\n      </View>\n\n      <View style={styles.section}>\n        <Text style={styles.sectionTitle}>Continue Learning</Text>\n        <TouchableOpacity \n          style={styles.continueCard}\n          onPress={() => {\n            // @ts-ignore - TypeScript doesn't know about tab navigation\n            navigation.navigate('LessonsTab');\n          }}\n        >\n          <View style={styles.continueContent}>\n            <Text style={styles.continueTitle}>\n              {user.completedLessons.length === 0 \n                ? 'Start your first lesson!' \n                : 'Continue your lessons'}\n            </Text>\n            <Text style={styles.continueSubtitle}>\n              {completionPercentage}% completed\n            </Text>\n          </View>\n          <View style={styles.progressBar}>\n            <View \n              style={[\n                styles.progressFill, \n                { width: `${completionPercentage}%` }\n              ]} \n            />\n          </View>\n        </TouchableOpacity>\n      </View>\n      \n      <View style={styles.section}>\n        <Text style={styles.sectionTitle}>Explore Topics</Text>\n        <View style={styles.topicsContainer}>\n          {getTopics().map((topic, index) => (\n            <TouchableOpacity \n              key={index} \n              style={styles.topicCard}\n              onPress={() => {\n                // @ts-ignore - TypeScript doesn't know about tab navigation\n                navigation.navigate('LessonsTab');\n              }}\n            >\n              <Text style={styles.topicText}>{topic}</Text>\n            </TouchableOpacity>\n          ))}\n        </View>\n      </View>\n\n      <View style={styles.section}>\n        <Text style={styles.sectionTitle}>Your Achievements</Text>\n        <TouchableOpacity \n          style={styles.achievementsCard}\n          onPress={() => {\n            // @ts-ignore - TypeScript doesn't know about nested navigation\n            navigation.navigate('ProfileTab', {\n              screen: 'Achievements',\n            });\n          }}\n        >\n          <Text style={styles.achievementsText}>\n            View your badges and achievements\n          </Text>\n          <Text style={styles.achievementsStat}>\n            {user.badges.filter(b => b.unlocked).length} / {user.badges.length} Unlocked\n          </Text>\n        </TouchableOpacity>\n      </View>\n\n      <View style={styles.section}>\n        <Text style={styles.sectionTitle}>Career Paths</Text>\n        <TouchableOpacity \n          style={styles.careersCard}\n          onPress={() => {\n            // @ts-ignore - TypeScript doesn't know about nested navigation\n            navigation.navigate('ProfileTab', {\n              screen: 'Careers',\n            });\n          }}\n        >\n          <Text style={styles.careersText}>\n            Discover environmental careers\n          </Text>\n          <Text style={styles.careersStat}>\n            {user.careers.filter(c => c.unlocked).length} / {user.careers.length} Unlocked\n          </Text>\n        </TouchableOpacity>\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: '#4CAF50',\n  },\n  logo: {\n    width: 40,\n    height: 40,\n    marginRight: 10,\n  },\n  appTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'white',\n  },\n  userCard: {\n    backgroundColor: 'white',\n    margin: 15,\n    borderRadius: 10,\n    padding: 15,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 2,\n  },\n  welcomeText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  statsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginTop: 10,\n  },\n  statItem: {\n    alignItems: 'center',\n  },\n  statValue: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#4CAF50',\n  },\n  statLabel: {\n    fontSize: 14,\n    color: '#757575',\n  },\n  section: {\n    marginTop: 20,\n    paddingHorizontal: 15,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  continueCard: {\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 15,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 3,\n    elevation: 2,\n  },\n  continueContent: {\n    marginBottom: 10,\n  },\n  continueTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  continueSubtitle: {\n    fontSize: 14,\n    color: '#757575',\n    marginTop: 5,\n  },\n  progressBar: {\n    height: 8,\n    backgroundColor: '#E0E0E0',\n    borderRadius: 4,\n    overflow: 'hidden',\n  },\n  progressFill: {\n    height: '100%',\n    backgroundColor: '#4CAF50',\n  },\n  topicsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n  },\n  topicCard: {\n    width: '48%',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 15,\n    marginBottom: 15,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 3,\n    elevation: 2,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  topicText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  achievementsCard: {\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 15,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 3,\n    elevation: 2,\n  },\n  achievementsText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  achievementsStat: {\n    fontSize: 14,\n    color: '#757575',\n    marginTop: 5,\n  },\n  careersCard: {\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 15,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 3,\n    elevation: 2,\n    marginBottom: 30,\n  },\n  careersText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  careersStat: {\n    fontSize: 14,\n    color: '#757575',\n    marginTop: 5,\n  }\n});\n\nexport default HomeScreen; ","import React, { useState } from 'react';\nimport { View, Text, StyleSheet, FlatList, TouchableOpacity, ScrollView } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { useAppContext } from '../context/AppContext';\nimport { Lesson } from '../types';\n\nconst LessonsScreen = () => {\n  const navigation = useNavigation();\n  const { allLessons, user } = useAppContext();\n  const [selectedTopic, setSelectedTopic] = useState<string | null>(null);\n\n  // Get unique topics\n  const topics = Array.from(new Set(allLessons.map(lesson => lesson.topic)));\n\n  // Filter lessons by selected topic\n  const filteredLessons = selectedTopic \n    ? allLessons.filter(lesson => lesson.topic === selectedTopic)\n    : allLessons;\n\n  const renderLessonItem = ({ item }: { item: Lesson }) => {\n    const isCompleted = user.completedLessons.includes(item.id);\n    \n    return (\n      <TouchableOpacity \n        style={[\n          styles.lessonCard,\n          isCompleted ? styles.completedLesson : {}\n        ]}\n        onPress={() => {\n          // @ts-ignore - TypeScript doesn't know about navigation params\n          navigation.navigate('LessonDetail', { lessonId: item.id });\n        }}\n      >\n        <View style={styles.lessonHeader}>\n          <View>\n            <Text style={styles.lessonTitle}>{item.title}</Text>\n            <Text style={styles.lessonTopic}>{item.topic}</Text>\n          </View>\n          <View style={styles.pointsBadge}>\n            <Text style={styles.pointsText}>{item.points} pts</Text>\n          </View>\n        </View>\n        <Text style={styles.lessonDescription}>{item.description}</Text>\n        {isCompleted && (\n          <View style={styles.completedBadge}>\n            <Text style={styles.completedText}>Completed</Text>\n          </View>\n        )}\n      </TouchableOpacity>\n    );\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <Text style={styles.title}>Environmental Lessons</Text>\n      </View>\n      \n      <View style={styles.topicsContainer}>\n        <ScrollableTopics \n          topics={topics} \n          selectedTopic={selectedTopic}\n          onSelectTopic={setSelectedTopic}\n        />\n      </View>\n      \n      <FlatList\n        data={filteredLessons}\n        renderItem={renderLessonItem}\n        keyExtractor={item => item.id}\n        contentContainerStyle={styles.lessonsList}\n      />\n    </View>\n  );\n};\n\n// Horizontal scrollable topics component\nconst ScrollableTopics = ({ \n  topics, \n  selectedTopic, \n  onSelectTopic \n}: { \n  topics: string[], \n  selectedTopic: string | null, \n  onSelectTopic: (topic: string | null) => void \n}) => {\n  return (\n    <FlatList\n      horizontal\n      data={['All', ...topics]}\n      renderItem={({ item }) => (\n        <TouchableOpacity\n          style={[\n            styles.topicChip,\n            (selectedTopic === item || (item === 'All' && selectedTopic === null)) \n              ? styles.selectedTopicChip \n              : {}\n          ]}\n          onPress={() => onSelectTopic(item === 'All' ? null : item)}\n        >\n          <Text \n            style={[\n              styles.topicChipText,\n              (selectedTopic === item || (item === 'All' && selectedTopic === null)) \n                ? styles.selectedTopicChipText \n                : {}\n            ]}\n          >\n            {item}\n          </Text>\n        </TouchableOpacity>\n      )}\n      keyExtractor={item => item}\n      showsHorizontalScrollIndicator={false}\n      contentContainerStyle={styles.topicChipsContainer}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  header: {\n    backgroundColor: '#4CAF50',\n    padding: 20,\n    paddingTop: 60,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'white',\n  },\n  topicsContainer: {\n    backgroundColor: 'white',\n    paddingVertical: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#E0E0E0',\n  },\n  topicChipsContainer: {\n    paddingHorizontal: 15,\n  },\n  topicChip: {\n    paddingHorizontal: 15,\n    paddingVertical: 8,\n    backgroundColor: '#EEEEEE',\n    borderRadius: 20,\n    marginRight: 10,\n  },\n  selectedTopicChip: {\n    backgroundColor: '#4CAF50',\n  },\n  topicChipText: {\n    color: '#757575',\n    fontWeight: '500',\n  },\n  selectedTopicChipText: {\n    color: 'white',\n  },\n  lessonsList: {\n    padding: 15,\n    paddingBottom: 30,\n  },\n  lessonCard: {\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 15,\n    marginBottom: 15,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 3,\n    elevation: 2,\n  },\n  completedLesson: {\n    borderLeftWidth: 5,\n    borderLeftColor: '#4CAF50',\n  },\n  lessonHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    marginBottom: 10,\n  },\n  lessonTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  lessonTopic: {\n    fontSize: 14,\n    color: '#757575',\n    marginTop: 2,\n  },\n  lessonDescription: {\n    fontSize: 14,\n    color: '#424242',\n  },\n  pointsBadge: {\n    backgroundColor: '#E8F5E9',\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    borderRadius: 15,\n  },\n  pointsText: {\n    color: '#4CAF50',\n    fontWeight: 'bold',\n    fontSize: 12,\n  },\n  completedBadge: {\n    marginTop: 10,\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    backgroundColor: '#E8F5E9',\n    borderRadius: 5,\n    alignSelf: 'flex-start',\n  },\n  completedText: {\n    color: '#4CAF50',\n    fontWeight: 'bold',\n    fontSize: 12,\n  },\n});\n\nexport default LessonsScreen; ","import React from 'react';\nimport { View, Text, StyleSheet, ScrollView, TouchableOpacity } from 'react-native';\nimport { useNavigation, useRoute, RouteProp } from '@react-navigation/native';\nimport { useAppContext } from '../context/AppContext';\nimport { RootStackParamList } from '../types';\n\ntype LessonDetailRouteProp = RouteProp<RootStackParamList, 'LessonDetail'>;\n\nconst LessonDetailScreen = () => {\n  const navigation = useNavigation();\n  const route = useRoute<LessonDetailRouteProp>();\n  const { lessonId } = route.params;\n  const { allLessons, user } = useAppContext();\n  \n  // Find the lesson by ID\n  const lesson = allLessons.find(l => l.id === lessonId);\n  \n  if (!lesson) {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.errorText}>Lesson not found</Text>\n      </View>\n    );\n  }\n  \n  const isCompleted = user.completedLessons.includes(lessonId);\n\n  return (\n    <ScrollView style={styles.container}>\n      <View style={styles.header}>\n        <Text style={styles.title}>{lesson.title}</Text>\n        <View style={styles.topicContainer}>\n          <Text style={styles.topicText}>{lesson.topic}</Text>\n        </View>\n      </View>\n      \n      <View style={styles.contentCard}>\n        <Text style={styles.contentText}>{lesson.content}</Text>\n        \n        {isCompleted ? (\n          <View style={styles.completedContainer}>\n            <Text style={styles.completedText}>\n              You have completed this lesson!\n            </Text>\n            <View style={styles.pointsEarned}>\n              <Text style={styles.pointsText}>\n                +{lesson.points} points earned\n              </Text>\n            </View>\n          </View>\n        ) : (\n          <TouchableOpacity \n            style={styles.startQuizButton}\n            onPress={() => {\n              // @ts-ignore - TypeScript doesn't know about navigation params\n              navigation.navigate('Quiz', { lessonId });\n            }}\n          >\n            <Text style={styles.startQuizButtonText}>Take Quiz</Text>\n          </TouchableOpacity>\n        )}\n      </View>\n      \n      <View style={styles.sectionCard}>\n        <Text style={styles.sectionTitle}>Learning Objectives</Text>\n        <View style={styles.objectivesList}>\n          <View style={styles.objectiveItem}>\n            <View style={styles.bulletPoint} />\n            <Text style={styles.objectiveText}>\n              Understand key concepts about {lesson.topic.toLowerCase()}\n            </Text>\n          </View>\n          <View style={styles.objectiveItem}>\n            <View style={styles.bulletPoint} />\n            <Text style={styles.objectiveText}>\n              Learn how {lesson.topic.toLowerCase()} affects our environment\n            </Text>\n          </View>\n          <View style={styles.objectiveItem}>\n            <View style={styles.bulletPoint} />\n            <Text style={styles.objectiveText}>\n              Explore solutions and actions related to {lesson.topic.toLowerCase()}\n            </Text>\n          </View>\n        </View>\n      </View>\n      \n      <View style={styles.sectionCard}>\n        <Text style={styles.sectionTitle}>Quiz Preview</Text>\n        <Text style={styles.quizPreviewText}>\n          This lesson has {lesson.questions.length} questions to test your knowledge.\n          Complete the quiz to earn {lesson.points} points!\n        </Text>\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  header: {\n    backgroundColor: '#4CAF50',\n    padding: 20,\n    paddingTop: 60,\n    paddingBottom: 30,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'white',\n    marginBottom: 10,\n  },\n  topicContainer: {\n    backgroundColor: 'rgba(255, 255, 255, 0.3)',\n    borderRadius: 20,\n    paddingHorizontal: 15,\n    paddingVertical: 5,\n    alignSelf: 'flex-start',\n  },\n  topicText: {\n    color: 'white',\n    fontWeight: '500',\n  },\n  contentCard: {\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 20,\n    margin: 15,\n    marginTop: -15,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  contentText: {\n    fontSize: 16,\n    lineHeight: 24,\n    color: '#424242',\n    marginBottom: 20,\n  },\n  startQuizButton: {\n    backgroundColor: '#4CAF50',\n    borderRadius: 25,\n    paddingVertical: 12,\n    alignItems: 'center',\n  },\n  startQuizButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  sectionCard: {\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 20,\n    marginHorizontal: 15,\n    marginBottom: 15,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n    elevation: 2,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 15,\n    color: '#333',\n  },\n  objectivesList: {\n    marginTop: 5,\n  },\n  objectiveItem: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    marginBottom: 12,\n  },\n  bulletPoint: {\n    width: 8,\n    height: 8,\n    borderRadius: 4,\n    backgroundColor: '#4CAF50',\n    marginTop: 6,\n    marginRight: 10,\n  },\n  objectiveText: {\n    flex: 1,\n    fontSize: 15,\n    color: '#424242',\n  },\n  quizPreviewText: {\n    fontSize: 15,\n    color: '#424242',\n    lineHeight: 22,\n  },\n  completedContainer: {\n    alignItems: 'center',\n    backgroundColor: '#E8F5E9',\n    borderRadius: 10,\n    padding: 15,\n    marginTop: 10,\n  },\n  completedText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#4CAF50',\n    marginBottom: 5,\n  },\n  pointsEarned: {\n    backgroundColor: '#4CAF50',\n    paddingHorizontal: 15,\n    paddingVertical: 5,\n    borderRadius: 15,\n    marginTop: 5,\n  },\n  pointsText: {\n    color: 'white',\n    fontWeight: 'bold',\n  },\n  errorText: {\n    fontSize: 18,\n    color: '#f44336',\n    textAlign: 'center',\n    marginTop: 100,\n  },\n});\n\nexport default LessonDetailScreen; ","import React, { useState, useEffect } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Alert } from 'react-native';\nimport { useNavigation, useRoute, RouteProp } from '@react-navigation/native';\nimport { useAppContext } from '../context/AppContext';\nimport { RootStackParamList, Question } from '../types';\n\ntype QuizRouteProp = RouteProp<RootStackParamList, 'Quiz'>;\n\nconst QuizScreen = () => {\n  const navigation = useNavigation();\n  const route = useRoute<QuizRouteProp>();\n  const { lessonId } = route.params;\n  const { allLessons, completeLesson } = useAppContext();\n  \n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOption, setSelectedOption] = useState<string | null>(null);\n  const [score, setScore] = useState(0);\n  const [isQuizCompleted, setIsQuizCompleted] = useState(false);\n  const [questions, setQuestions] = useState<Question[]>([]);\n  \n  useEffect(() => {\n    // Find the lesson and get its questions\n    const lesson = allLessons.find(l => l.id === lessonId);\n    if (lesson) {\n      setQuestions(lesson.questions);\n    }\n  }, [lessonId, allLessons]);\n  \n  const currentQuestion = questions[currentQuestionIndex];\n  \n  const handleOptionSelect = (option: string) => {\n    setSelectedOption(option);\n  };\n  \n  const handleNext = () => {\n    if (selectedOption === null) {\n      Alert.alert('Please select an answer');\n      return;\n    }\n    \n    // Check if answer is correct\n    if (selectedOption === currentQuestion.correctAnswer) {\n      setScore(prev => prev + 1);\n    }\n    \n    // Move to next question or complete quiz\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(prev => prev + 1);\n      setSelectedOption(null);\n    } else {\n      // Quiz completed\n      setIsQuizCompleted(true);\n      \n      // Complete the lesson\n      completeLesson(lessonId);\n    }\n  };\n  \n  const handleFinish = () => {\n    // @ts-ignore - TypeScript doesn't know about going back to the root\n    navigation.navigate('LessonDetail', { lessonId });\n  };\n  \n  if (!currentQuestion && !isQuizCompleted) {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.loadingText}>Loading questions...</Text>\n      </View>\n    );\n  }\n  \n  return (\n    <View style={styles.container}>\n      {!isQuizCompleted ? (\n        <>\n          <View style={styles.header}>\n            <Text style={styles.quizProgress}>\n              Question {currentQuestionIndex + 1} of {questions.length}\n            </Text>\n            <View style={styles.progressBar}>\n              <View \n                style={[\n                  styles.progressFill, \n                  { width: `${((currentQuestionIndex + 1) / questions.length) * 100}%` }\n                ]} \n              />\n            </View>\n          </View>\n          \n          <View style={styles.questionContainer}>\n            <Text style={styles.questionText}>{currentQuestion.text}</Text>\n            \n            <View style={styles.optionsContainer}>\n              {currentQuestion.options.map((option, index) => (\n                <TouchableOpacity \n                  key={index}\n                  style={[\n                    styles.optionCard,\n                    selectedOption === option ? styles.selectedOption : {}\n                  ]}\n                  onPress={() => handleOptionSelect(option)}\n                >\n                  <Text \n                    style={[\n                      styles.optionText,\n                      selectedOption === option ? styles.selectedOptionText : {}\n                    ]}\n                  >\n                    {option}\n                  </Text>\n                </TouchableOpacity>\n              ))}\n            </View>\n          </View>\n          \n          <TouchableOpacity \n            style={[\n              styles.nextButton,\n              selectedOption === null ? styles.disabledButton : {}\n            ]}\n            onPress={handleNext}\n            disabled={selectedOption === null}\n          >\n            <Text style={styles.nextButtonText}>\n              {currentQuestionIndex < questions.length - 1 ? 'Next Question' : 'Finish Quiz'}\n            </Text>\n          </TouchableOpacity>\n        </>\n      ) : (\n        <View style={styles.resultsContainer}>\n          <View style={styles.scoreCard}>\n            <Text style={styles.congratsText}>Quiz Completed!</Text>\n            <Text style={styles.scoreText}>\n              Your Score: {score} / {questions.length}\n            </Text>\n            <View style={styles.resultProgressBar}>\n              <View \n                style={[\n                  styles.resultProgressFill, \n                  { width: `${(score / questions.length) * 100}%` }\n                ]} \n              />\n            </View>\n            <Text style={styles.feedbackText}>\n              {score === questions.length \n                ? 'Perfect! You mastered this lesson!' \n                : score >= questions.length / 2 \n                  ? 'Great job! You learned a lot!' \n                  : 'Good try! Review the lesson and try again.'}\n            </Text>\n          </View>\n          \n          <TouchableOpacity \n            style={styles.finishButton}\n            onPress={handleFinish}\n          >\n            <Text style={styles.finishButtonText}>Back to Lesson</Text>\n          </TouchableOpacity>\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  header: {\n    backgroundColor: 'white',\n    padding: 20,\n    paddingTop: 60,\n  },\n  quizProgress: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  progressBar: {\n    height: 8,\n    backgroundColor: '#E0E0E0',\n    borderRadius: 4,\n    overflow: 'hidden',\n  },\n  progressFill: {\n    height: '100%',\n    backgroundColor: '#4CAF50',\n  },\n  questionContainer: {\n    padding: 20,\n    marginBottom: 20,\n  },\n  questionText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    color: '#333',\n  },\n  optionsContainer: {\n    marginTop: 10,\n  },\n  optionCard: {\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 16,\n    marginBottom: 12,\n    borderWidth: 1,\n    borderColor: '#E0E0E0',\n  },\n  selectedOption: {\n    borderColor: '#4CAF50',\n    backgroundColor: '#E8F5E9',\n  },\n  optionText: {\n    fontSize: 16,\n    color: '#424242',\n  },\n  selectedOptionText: {\n    color: '#4CAF50',\n    fontWeight: 'bold',\n  },\n  nextButton: {\n    backgroundColor: '#4CAF50',\n    borderRadius: 25,\n    paddingVertical: 15,\n    marginHorizontal: 20,\n    alignItems: 'center',\n    position: 'absolute',\n    bottom: 30,\n    left: 0,\n    right: 0,\n  },\n  disabledButton: {\n    backgroundColor: '#BDBDBD',\n  },\n  nextButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  resultsContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    padding: 20,\n  },\n  scoreCard: {\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 25,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  congratsText: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#4CAF50',\n    marginBottom: 20,\n  },\n  scoreText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 15,\n  },\n  resultProgressBar: {\n    height: 10,\n    backgroundColor: '#E0E0E0',\n    borderRadius: 5,\n    width: '100%',\n    marginBottom: 20,\n    overflow: 'hidden',\n  },\n  resultProgressFill: {\n    height: '100%',\n    backgroundColor: '#4CAF50',\n  },\n  feedbackText: {\n    fontSize: 16,\n    textAlign: 'center',\n    color: '#424242',\n    lineHeight: 22,\n  },\n  finishButton: {\n    backgroundColor: '#4CAF50',\n    borderRadius: 25,\n    paddingVertical: 15,\n    marginTop: 30,\n    alignItems: 'center',\n  },\n  finishButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  loadingText: {\n    fontSize: 18,\n    textAlign: 'center',\n    marginTop: 100,\n    color: '#757575',\n  },\n});\n\nexport default QuizScreen; ","import React from 'react';\nimport { View, Text, StyleSheet, ScrollView, TouchableOpacity, Image } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { useAppContext } from '../context/AppContext';\nimport { Lesson } from '../types';\n\nconst ProfileScreen = () => {\n  const navigation = useNavigation();\n  const { user, resetProgress, allLessons } = useAppContext();\n  \n  // Calculate percentage of lessons completed\n  const completionPercentage = Math.round((user.completedLessons.length / allLessons.length) * 100);\n  \n  // Calculate points needed for next level\n  const pointsForNextLevel = (user.level) * 100;\n  const pointsProgress = user.points % 100;\n  const pointsProgressPercentage = (pointsProgress / 100) * 100;\n  \n  // Get count of unlocked badges and careers\n  const unlockedBadges = user.badges.filter(badge => badge.unlocked).length;\n  const unlockedCareers = user.careers.filter(career => career.unlocked).length;\n  \n  // Recently completed lessons\n  const recentCompletedLessons = user.completedLessons\n    .map(lessonId => allLessons.find(lesson => lesson.id === lessonId))\n    .filter((lesson): lesson is Lesson => lesson !== undefined)\n    .slice(0, 3);\n\n  return (\n    <ScrollView style={styles.container}>\n      <View style={styles.header}>\n        <View style={styles.profileImageContainer}>\n          <View style={styles.profileImagePlaceholder}>\n            <Text style={styles.profileInitial}>\n              {user.username.charAt(0).toUpperCase()}\n            </Text>\n          </View>\n        </View>\n        \n        <Text style={styles.username}>{user.username}</Text>\n        \n        <View style={styles.levelContainer}>\n          <Text style={styles.levelText}>Level {user.level}</Text>\n        </View>\n      </View>\n      \n      <View style={styles.statsCard}>\n        <View style={styles.statRow}>\n          <View style={styles.statItem}>\n            <Text style={styles.statValue}>{user.points}</Text>\n            <Text style={styles.statLabel}>Points</Text>\n          </View>\n          <View style={styles.statItem}>\n            <Text style={styles.statValue}>{completionPercentage}%</Text>\n            <Text style={styles.statLabel}>Completed</Text>\n          </View>\n          <View style={styles.statItem}>\n            <Text style={styles.statValue}>{unlockedBadges}</Text>\n            <Text style={styles.statLabel}>Badges</Text>\n          </View>\n        </View>\n        \n        <View style={styles.levelProgressContainer}>\n          <View style={styles.levelProgressLabels}>\n            <Text style={styles.nextLevelText}>\n              {pointsProgress} / 100 points to level {user.level + 1}\n            </Text>\n          </View>\n          <View style={styles.levelProgressBar}>\n            <View \n              style={[\n                styles.levelProgressFill, \n                { width: `${pointsProgressPercentage}%` }\n              ]} \n            />\n          </View>\n        </View>\n      </View>\n      \n      <View style={styles.menuSection}>\n        <TouchableOpacity \n          style={styles.menuCard}\n          onPress={() => {\n            // @ts-ignore - TypeScript doesn't know about nested navigation\n            navigation.navigate('Achievements');\n          }}\n        >\n          <View style={styles.menuContent}>\n            <View style={styles.menuIconContainer}>\n              <Text style={styles.menuIcon}>🏆</Text>\n            </View>\n            <View style={styles.menuTextContainer}>\n              <Text style={styles.menuTitle}>Achievements</Text>\n              <Text style={styles.menuSubtitle}>\n                {unlockedBadges} of {user.badges.length} badges unlocked\n              </Text>\n            </View>\n          </View>\n        </TouchableOpacity>\n        \n        <TouchableOpacity \n          style={styles.menuCard}\n          onPress={() => {\n            // @ts-ignore - TypeScript doesn't know about nested navigation\n            navigation.navigate('Careers');\n          }}\n        >\n          <View style={styles.menuContent}>\n            <View style={styles.menuIconContainer}>\n              <Text style={styles.menuIcon}>🌎</Text>\n            </View>\n            <View style={styles.menuTextContainer}>\n              <Text style={styles.menuTitle}>Career Paths</Text>\n              <Text style={styles.menuSubtitle}>\n                {unlockedCareers} of {user.careers.length} careers unlocked\n              </Text>\n            </View>\n          </View>\n        </TouchableOpacity>\n      </View>\n      \n      {recentCompletedLessons.length > 0 && (\n        <View style={styles.section}>\n          <Text style={styles.sectionTitle}>Recent Completed Lessons</Text>\n          {recentCompletedLessons.map((lesson, index) => (\n            <TouchableOpacity \n              key={index}\n              style={styles.recentLessonCard}\n              onPress={() => {\n                // @ts-ignore - TypeScript doesn't know about nested navigation\n                navigation.navigate('LessonsTab', {\n                  screen: 'LessonDetail',\n                  params: { lessonId: lesson.id }\n                });\n              }}\n            >\n              <View style={styles.recentLessonInfo}>\n                <Text style={styles.recentLessonTitle}>{lesson.title}</Text>\n                <Text style={styles.recentLessonTopic}>{lesson.topic}</Text>\n              </View>\n              <View style={styles.recentLessonPoints}>\n                <Text style={styles.recentLessonPointsText}>+{lesson.points}</Text>\n              </View>\n            </TouchableOpacity>\n          ))}\n        </View>\n      )}\n      \n      <TouchableOpacity \n        style={styles.resetButton}\n        onPress={() => {\n          resetProgress();\n        }}\n      >\n        <Text style={styles.resetButtonText}>Reset Progress</Text>\n      </TouchableOpacity>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  header: {\n    backgroundColor: '#4CAF50',\n    padding: 20,\n    paddingTop: 60,\n    alignItems: 'center',\n  },\n  profileImageContainer: {\n    marginBottom: 15,\n  },\n  profileImagePlaceholder: {\n    width: 80,\n    height: 80,\n    borderRadius: 40,\n    backgroundColor: 'white',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  profileInitial: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#4CAF50',\n  },\n  username: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'white',\n    marginBottom: 5,\n  },\n  levelContainer: {\n    backgroundColor: 'rgba(255, 255, 255, 0.3)',\n    paddingHorizontal: 15,\n    paddingVertical: 5,\n    borderRadius: 15,\n    marginTop: 5,\n  },\n  levelText: {\n    color: 'white',\n    fontWeight: 'bold',\n  },\n  statsCard: {\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 20,\n    margin: 15,\n    marginTop: -20,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  statRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 15,\n  },\n  statItem: {\n    alignItems: 'center',\n    flex: 1,\n  },\n  statValue: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#4CAF50',\n  },\n  statLabel: {\n    fontSize: 14,\n    color: '#757575',\n    marginTop: 5,\n  },\n  levelProgressContainer: {\n    marginTop: 10,\n  },\n  levelProgressLabels: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 5,\n  },\n  nextLevelText: {\n    fontSize: 14,\n    color: '#757575',\n  },\n  levelProgressBar: {\n    height: 8,\n    backgroundColor: '#E0E0E0',\n    borderRadius: 4,\n    overflow: 'hidden',\n  },\n  levelProgressFill: {\n    height: '100%',\n    backgroundColor: '#4CAF50',\n  },\n  menuSection: {\n    marginTop: 10,\n    marginHorizontal: 15,\n  },\n  menuCard: {\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 15,\n    marginBottom: 15,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n    elevation: 2,\n  },\n  menuContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  menuIconContainer: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    backgroundColor: '#E8F5E9',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginRight: 15,\n  },\n  menuIcon: {\n    fontSize: 24,\n  },\n  menuTextContainer: {\n    flex: 1,\n  },\n  menuTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  menuSubtitle: {\n    fontSize: 14,\n    color: '#757575',\n    marginTop: 3,\n  },\n  section: {\n    marginTop: 10,\n    marginHorizontal: 15,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  recentLessonCard: {\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 15,\n    marginBottom: 10,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n    elevation: 2,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  recentLessonInfo: {\n    flex: 1,\n  },\n  recentLessonTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  recentLessonTopic: {\n    fontSize: 14,\n    color: '#757575',\n    marginTop: 3,\n  },\n  recentLessonPoints: {\n    backgroundColor: '#E8F5E9',\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    borderRadius: 15,\n  },\n  recentLessonPointsText: {\n    color: '#4CAF50',\n    fontWeight: 'bold',\n  },\n  resetButton: {\n    backgroundColor: '#F5F5F5',\n    borderWidth: 1,\n    borderColor: '#E0E0E0',\n    borderRadius: 25,\n    paddingVertical: 12,\n    marginHorizontal: 15,\n    marginVertical: 20,\n    alignItems: 'center',\n  },\n  resetButtonText: {\n    color: '#757575',\n  },\n});\n\nexport default ProfileScreen; ","import React from 'react';\nimport { View, Text, StyleSheet, FlatList } from 'react-native';\nimport { useAppContext } from '../context/AppContext';\nimport { Career } from '../types';\n\nconst CareersScreen = () => {\n  const { user } = useAppContext();\n  \n  const renderCareerItem = ({ item }: { item: Career }) => {\n    return (\n      <View style={[\n        styles.careerCard,\n        item.unlocked ? styles.unlockedCareer : styles.lockedCareer,\n      ]}>\n        <View style={styles.careerHeader}>\n          <Text style={styles.careerTitle}>{item.title}</Text>\n          {!item.unlocked && (\n            <View style={styles.lockContainer}>\n              <Text style={styles.lockText}>Locked</Text>\n            </View>\n          )}\n          {item.unlocked && (\n            <View style={styles.unlockContainer}>\n              <Text style={styles.unlockText}>Unlocked</Text>\n            </View>\n          )}\n        </View>\n        \n        <Text style={styles.careerDescription}>{item.description}</Text>\n        \n        <View style={styles.section}>\n          <Text style={styles.sectionTitle}>Requirements:</Text>\n          <View style={styles.requirementsList}>\n            {item.requirements.map((requirement, index) => (\n              <View key={index} style={styles.requirementItem}>\n                <View style={styles.bulletPoint} />\n                <Text style={styles.requirementText}>{requirement}</Text>\n              </View>\n            ))}\n          </View>\n        </View>\n        \n        {!item.unlocked && (\n          <View style={styles.pointsRequiredContainer}>\n            <Text style={styles.pointsRequiredText}>\n              Requires {item.pointsRequired} points to unlock\n            </Text>\n            <View style={styles.progressBar}>\n              <View \n                style={[\n                  styles.progressFill, \n                  { width: `${Math.min((user.points / item.pointsRequired) * 100, 100)}%` }\n                ]} \n              />\n            </View>\n            <Text style={styles.progressText}>\n              {user.points} / {item.pointsRequired} points\n            </Text>\n          </View>\n        )}\n      </View>\n    );\n  };\n\n  // Separate unlocked and locked careers\n  const unlockedCareers = user.careers.filter(career => career.unlocked);\n  const lockedCareers = user.careers.filter(career => !career.unlocked);\n  \n  // Combine them to display unlocked careers first\n  const sortedCareers = [...unlockedCareers, ...lockedCareers];\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <Text style={styles.title}>Environmental Careers</Text>\n        <Text style={styles.subtitle}>\n          {unlockedCareers.length} of {user.careers.length} careers unlocked\n        </Text>\n      </View>\n      \n      <FlatList\n        data={sortedCareers}\n        renderItem={renderCareerItem}\n        keyExtractor={item => item.id}\n        contentContainerStyle={styles.careersList}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  header: {\n    backgroundColor: '#4CAF50',\n    padding: 20,\n    paddingTop: 60,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'white',\n    marginBottom: 5,\n  },\n  subtitle: {\n    fontSize: 16,\n    color: 'rgba(255, 255, 255, 0.8)',\n  },\n  careersList: {\n    padding: 15,\n    paddingBottom: 30,\n  },\n  careerCard: {\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 20,\n    marginBottom: 15,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n    elevation: 2,\n  },\n  unlockedCareer: {\n    borderLeftWidth: 5,\n    borderLeftColor: '#4CAF50',\n  },\n  lockedCareer: {\n    opacity: 0.8,\n  },\n  careerHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  careerTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    flex: 1,\n  },\n  lockContainer: {\n    backgroundColor: '#F5F5F5',\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    borderRadius: 5,\n  },\n  lockText: {\n    fontSize: 12,\n    color: '#757575',\n    fontWeight: 'bold',\n  },\n  unlockContainer: {\n    backgroundColor: '#E8F5E9',\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    borderRadius: 5,\n  },\n  unlockText: {\n    fontSize: 12,\n    color: '#4CAF50',\n    fontWeight: 'bold',\n  },\n  careerDescription: {\n    fontSize: 15,\n    color: '#424242',\n    marginBottom: 15,\n    lineHeight: 22,\n  },\n  section: {\n    marginTop: 5,\n    marginBottom: 15,\n  },\n  sectionTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  requirementsList: {\n    marginLeft: 5,\n  },\n  requirementItem: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    marginBottom: 8,\n  },\n  bulletPoint: {\n    width: 8,\n    height: 8,\n    borderRadius: 4,\n    backgroundColor: '#4CAF50',\n    marginTop: 6,\n    marginRight: 10,\n  },\n  requirementText: {\n    flex: 1,\n    fontSize: 14,\n    color: '#424242',\n  },\n  pointsRequiredContainer: {\n    backgroundColor: '#F5F5F5',\n    padding: 15,\n    borderRadius: 8,\n    marginTop: 5,\n  },\n  pointsRequiredText: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: '#757575',\n    marginBottom: 10,\n  },\n  progressBar: {\n    height: 8,\n    backgroundColor: '#E0E0E0',\n    borderRadius: 4,\n    overflow: 'hidden',\n    marginBottom: 5,\n  },\n  progressFill: {\n    height: '100%',\n    backgroundColor: '#4CAF50',\n  },\n  progressText: {\n    fontSize: 12,\n    color: '#757575',\n    textAlign: 'right',\n  },\n});\n\nexport default CareersScreen; ","import React from 'react';\nimport { View, Text, StyleSheet, FlatList, TouchableOpacity } from 'react-native';\nimport { useAppContext } from '../context/AppContext';\nimport { Badge } from '../types';\n\nconst AchievementsScreen = () => {\n  const { user } = useAppContext();\n  \n  const renderBadgeItem = ({ item }: { item: Badge }) => {\n    return (\n      <View style={[\n        styles.badgeCard,\n        item.unlocked ? styles.unlockedBadge : styles.lockedBadge,\n      ]}>\n        <View style={styles.badgeIconContainer}>\n          <Text style={styles.badgeIcon}>{item.image}</Text>\n        </View>\n        <View style={styles.badgeContent}>\n          <Text style={styles.badgeName}>{item.name}</Text>\n          <Text style={styles.badgeDescription}>{item.description}</Text>\n          {!item.unlocked && (\n            <View style={styles.requirementContainer}>\n              <Text style={styles.requirementText}>\n                {item.requirementType === 'points' \n                  ? `Requires ${item.requirementValue} points` \n                  : item.requirementType === 'lessons'\n                    ? `Complete ${item.requirementValue} lessons`\n                    : `Complete ${item.requirementValue} quizzes`\n                }\n              </Text>\n            </View>\n          )}\n        </View>\n        {item.unlocked && (\n          <View style={styles.unlockedTag}>\n            <Text style={styles.unlockedText}>Unlocked</Text>\n          </View>\n        )}\n      </View>\n    );\n  };\n\n  // Separate unlocked and locked badges\n  const unlockedBadges = user.badges.filter(badge => badge.unlocked);\n  const lockedBadges = user.badges.filter(badge => !badge.unlocked);\n  \n  // Combine them to display unlocked badges first\n  const sortedBadges = [...unlockedBadges, ...lockedBadges];\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <Text style={styles.title}>Achievements</Text>\n        <Text style={styles.subtitle}>\n          {unlockedBadges.length} of {user.badges.length} badges unlocked\n        </Text>\n      </View>\n      \n      <FlatList\n        data={sortedBadges}\n        renderItem={renderBadgeItem}\n        keyExtractor={item => item.id}\n        contentContainerStyle={styles.badgesList}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  header: {\n    backgroundColor: '#4CAF50',\n    padding: 20,\n    paddingTop: 60,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'white',\n    marginBottom: 5,\n  },\n  subtitle: {\n    fontSize: 16,\n    color: 'rgba(255, 255, 255, 0.8)',\n  },\n  badgesList: {\n    padding: 15,\n    paddingBottom: 30,\n  },\n  badgeCard: {\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 15,\n    marginBottom: 15,\n    flexDirection: 'row',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n    elevation: 2,\n  },\n  unlockedBadge: {\n    borderLeftWidth: 5,\n    borderLeftColor: '#4CAF50',\n  },\n  lockedBadge: {\n    opacity: 0.7,\n  },\n  badgeIconContainer: {\n    width: 60,\n    height: 60,\n    borderRadius: 30,\n    backgroundColor: '#E8F5E9',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginRight: 15,\n  },\n  badgeIcon: {\n    fontSize: 30,\n  },\n  badgeContent: {\n    flex: 1,\n  },\n  badgeName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 5,\n  },\n  badgeDescription: {\n    fontSize: 14,\n    color: '#757575',\n    marginBottom: 5,\n  },\n  requirementContainer: {\n    backgroundColor: '#F5F5F5',\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    borderRadius: 5,\n    alignSelf: 'flex-start',\n    marginTop: 5,\n  },\n  requirementText: {\n    fontSize: 12,\n    color: '#757575',\n  },\n  unlockedTag: {\n    backgroundColor: '#E8F5E9',\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    borderRadius: 5,\n    alignSelf: 'flex-start',\n  },\n  unlockedText: {\n    fontSize: 12,\n    color: '#4CAF50',\n    fontWeight: 'bold',\n  },\n});\n\nexport default AchievementsScreen; ","import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { RootStackParamList } from '../types';\n\n// Import screens\nimport HomeScreen from '../screens/HomeScreen';\nimport LessonsScreen from '../screens/LessonsScreen';\nimport LessonDetailScreen from '../screens/LessonDetailScreen';\nimport QuizScreen from '../screens/QuizScreen';\nimport ProfileScreen from '../screens/ProfileScreen';\nimport CareersScreen from '../screens/CareersScreen';\nimport AchievementsScreen from '../screens/AchievementsScreen';\n\nconst Tab = createBottomTabNavigator();\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nconst LessonsStack = () => {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen name=\"Lessons\" component={LessonsScreen} options={{ headerShown: false }} />\n      <Stack.Screen name=\"LessonDetail\" component={LessonDetailScreen} options={{ title: 'Lesson' }} />\n      <Stack.Screen name=\"Quiz\" component={QuizScreen} options={{ title: 'Quiz' }} />\n    </Stack.Navigator>\n  );\n};\n\nconst ProfileStack = () => {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen name=\"Profile\" component={ProfileScreen} options={{ headerShown: false }} />\n      <Stack.Screen name=\"Achievements\" component={AchievementsScreen} options={{ title: 'Achievements' }} />\n      <Stack.Screen name=\"Careers\" component={CareersScreen} options={{ title: 'Career Paths' }} />\n    </Stack.Navigator>\n  );\n};\n\nconst AppNavigator = () => {\n  return (\n    <NavigationContainer>\n      <Tab.Navigator\n        screenOptions={{\n          tabBarActiveTintColor: '#4CAF50',\n          tabBarInactiveTintColor: 'gray',\n          headerShown: false,\n        }}\n      >\n        <Tab.Screen \n          name=\"HomeTab\" \n          component={HomeScreen} \n          options={{\n            tabBarLabel: 'Home',\n            tabBarIcon: ({ color, size }) => (\n              <MaterialCommunityIcons name=\"home\" color={color} size={size} />\n            ),\n          }}\n        />\n        <Tab.Screen \n          name=\"LessonsTab\" \n          component={LessonsStack} \n          options={{\n            tabBarLabel: 'Lessons',\n            tabBarIcon: ({ color, size }) => (\n              <MaterialCommunityIcons name=\"book-open-variant\" color={color} size={size} />\n            ),\n          }}\n        />\n        <Tab.Screen \n          name=\"ProfileTab\" \n          component={ProfileStack} \n          options={{\n            tabBarLabel: 'Profile',\n            tabBarIcon: ({ color, size }) => (\n              <MaterialCommunityIcons name=\"account\" color={color} size={size} />\n            ),\n          }}\n        />\n      </Tab.Navigator>\n    </NavigationContainer>\n  );\n};\n\nexport default AppNavigator; ","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","import React from 'react';\nimport { AppProvider } from './src/context/AppContext';\nimport AppNavigator from './src/navigation/AppNavigator';\nimport { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nexport default function App() {\n  return (\n    <SafeAreaProvider>\n      <AppProvider>\n        <StatusBar style=\"auto\" />\n        <AppNavigator />\n      </AppProvider>\n    </SafeAreaProvider>\n  );\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/environmental-learning/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [284], () => (__webpack_require__(9776)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["lessons","id","title","description","topic","points","content","questions","text","options","correctAnswer","completed","initialUser","username","level","badges","name","image","unlocked","requirementType","requirementValue","map","badge","Object","assign","completedLessons","careers","requirements","pointsRequired","career","AppContext","createContext","undefined","useAppContext","context","useContext","Error","AppProvider","children","user","setUser","useState","allLessons","setAllLessons","useEffect","newLevel","Math","floor","prev","updatedBadges","shouldUnlock","length","updatedCareers","JSON","stringify","addPoints","_jsx","Provider","value","completeLesson","lessonId","includes","lesson","find","l","resetProgress","styles","StyleSheet","create","container","flex","backgroundColor","header","flexDirection","alignItems","padding","logo","width","height","marginRight","appTitle","fontSize","fontWeight","color","userCard","margin","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","welcomeText","marginBottom","statsContainer","justifyContent","marginTop","statItem","statValue","statLabel","section","paddingHorizontal","sectionTitle","continueCard","continueContent","continueTitle","continueSubtitle","progressBar","overflow","progressFill","topicsContainer","flexWrap","topicCard","topicText","achievementsCard","achievementsText","achievementsStat","careersCard","careersText","careersStat","HomeScreen","navigation","useNavigation","completionPercentage","round","_jsxs","ScrollView","style","View","Image","source","uri","Text","TouchableOpacity","onPress","navigate","Array","from","Set","slice","index","screen","filter","b","c","ScrollableTopics","topics","selectedTopic","onSelectTopic","FlatList","horizontal","data","renderItem","item","topicChip","selectedTopicChip","topicChipText","selectedTopicChipText","keyExtractor","showsHorizontalScrollIndicator","contentContainerStyle","topicChipsContainer","paddingTop","paddingVertical","borderBottomWidth","borderBottomColor","lessonsList","paddingBottom","lessonCard","completedLesson","borderLeftWidth","borderLeftColor","lessonHeader","lessonTitle","lessonTopic","lessonDescription","pointsBadge","pointsText","completedBadge","alignSelf","completedText","LessonsScreen","setSelectedTopic","filteredLessons","renderLessonItem","isCompleted","topicContainer","contentCard","contentText","lineHeight","startQuizButton","startQuizButtonText","sectionCard","marginHorizontal","objectivesList","objectiveItem","bulletPoint","objectiveText","quizPreviewText","completedContainer","pointsEarned","errorText","textAlign","LessonDetailScreen","route","useRoute","params","toLowerCase","quizProgress","questionContainer","questionText","optionsContainer","optionCard","borderWidth","borderColor","selectedOption","optionText","selectedOptionText","nextButton","position","bottom","left","right","disabledButton","nextButtonText","resultsContainer","scoreCard","congratsText","scoreText","resultProgressBar","resultProgressFill","feedbackText","finishButton","finishButtonText","loadingText","QuizScreen","currentQuestionIndex","setCurrentQuestionIndex","setSelectedOption","score","setScore","isQuizCompleted","setIsQuizCompleted","setQuestions","currentQuestion","handleFinish","_Fragment","option","handleOptionSelect","handleNext","Alert","alert","disabled","profileImageContainer","profileImagePlaceholder","profileInitial","levelContainer","levelText","statsCard","statRow","levelProgressContainer","levelProgressLabels","nextLevelText","levelProgressBar","levelProgressFill","menuSection","menuCard","menuContent","menuIconContainer","menuIcon","menuTextContainer","menuTitle","menuSubtitle","recentLessonCard","recentLessonInfo","recentLessonTitle","recentLessonTopic","recentLessonPoints","recentLessonPointsText","resetButton","marginVertical","resetButtonText","ProfileScreen","pointsProgress","pointsProgressPercentage","unlockedBadges","unlockedCareers","recentCompletedLessons","charAt","toUpperCase","subtitle","careersList","careerCard","unlockedCareer","lockedCareer","opacity","careerHeader","careerTitle","lockContainer","lockText","unlockContainer","unlockText","careerDescription","requirementsList","marginLeft","requirementItem","requirementText","pointsRequiredContainer","pointsRequiredText","progressText","CareersScreen","lockedCareers","sortedCareers","renderCareerItem","requirement","min","badgesList","badgeCard","unlockedBadge","lockedBadge","badgeIconContainer","badgeIcon","badgeContent","badgeName","badgeDescription","requirementContainer","unlockedTag","unlockedText","AchievementsScreen","lockedBadges","sortedBadges","renderBadgeItem","Tab","createBottomTabNavigator","Stack","createNativeStackNavigator","LessonsStack","Navigator","Screen","component","headerShown","ProfileStack","AppNavigator","NavigationContainer","screenOptions","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarLabel","tabBarIcon","size","MaterialCommunityIcons","registerRootComponent","SafeAreaProvider","StatusBar","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","keys","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}